
############################################################################################################################################################################################################################
############################################################################################################################################################################################################################
#                Base Macros 
############################################################################################################################################################################################################################
############################################################################################################################################################################################################################

##### Variables #####
[gcode_macro MACROS_VARS]
variable_circ_fan_speed:        205
variable_probe_temp:            150
variable_purge_bucket_x:        110
variable_purge_bucket_y:        187
variable_ending_length:          25
variable_purge_length:           40
#variable_filament_swap_length:  0.8
#variable_pla_pa:             0.0525
#variable_pet_pa:             0.0650
#variable_abs_pa:             0.0460
#variable_pet_za:              0.010
variable_move_away_home:         10
variable_verbose:             True    # Enable verbose output
variable_debug:              False    # Enable Debug output
gcode:

####################################################################################################################
#               PRESSURE ADVANCE 
####################################################################################################################


# This will just set a default value for PA per nozzle size and filament type. 
# If PS/SS filament gcode sets pressure advance, it will take precendence over this, as it runs after.

[gcode_macro MATERIAL_PA]
description: Set pressure advance value based on material type and nozzle diameter
gcode:
    #
    #
    {% set pa_settings = {
        'ABS': {
            0.4: 0.040,
            0.6: 0.000,
            0.8: 0.000
        },
         'ASA': {
            0.4: 0.028,
            0.6: 0.000,
            0.8: 0.000
        },
        'PET': {
            0.4: 0.040,
            0.6: 0.000,
            0.8: 0.000
        },
        'PLA': {
            0.4: 0.040,
            0.6: 0.000,
            0.8: 0.000
        },
    } %}
    
    {% set material = params.MATERIAL|default('')|string|upper %}
    {action_raise_error('AUTO_PA: must provide a recognized value for the MATERIAL parameter') if material not in pa_settings}
    
    {% set nozzle_diameter = params.NOZZLE|default(0)|float %}
    {action_raise_error('AUTO_PA: must provide a recognized value for the NOZZLE parameter') if nozzle_diameter not in pa_settings[material]}
    
    {action_respond_info('AUTO_PA: setting value to "%s" for MATERIAL=%s and NOZZLE=%s. Previous value was: %s' % (pa_settings[material][nozzle_diameter]|string, material, nozzle_diameter|string, printer.configfile.settings['extruder'].pressure_advance))}
    SET_PRESSURE_ADVANCE ADVANCE={pa_settings[material][nozzle_diameter]}

    {% if MATERIAL == "PET" %}
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1
    {% endif %}

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html

[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}


##############################################################################################################
#                              G Code Overrides
##############################################################################################################

[gcode_macro CLEAR_BUFFER]
gcode:
    M400

[gcode_macro ABSOLUTE_COORDINATES]
gcode:
    G90

[gcode_macro RELATIVE_COORDINATES]
gcode:
    G91

[gcode_macro ABSOLUTE_EXTRUSION]
gcode:
    M82

[gcode_macro RELATIVE_EXTRUSION]
gcode:
    M83

[gcode_macro DISABLE_MOTORS]
gcode:
   M84

[gcode_macro RESET_EXTRUDER]
gcode:
    DISPLAYTEXT TEXT="Resetting Extruder"
    G92 E0 ; reset extruder
    DISPLAYTEXT TEXT="Extruder Reset"

[gcode_macro WAIT]
gcode:
    {% set TIME = params.TIME|default(0)|int %}
    G4 P{TIME*1000}

[gcode_macro DISPLAYTEXT]
gcode:
    {% set TEXT = params.TEXT|default("")|string %} 
    RESPOND MSG="{TEXT}"
    SET_DISPLAY_TEXT MSG="{TEXT}"

[gcode_macro SET_FAN]
gcode:
    {% set SPEED = params.SPEED|default(0)|int %}
    {% if SPEED == 0 %}
    M107
    {% else %}
    M106 S{SPEED}
    {% endif %}

[gcode_macro SET_TEMP]
gcode:
    {% set HEATER = params.HEATER|default("")|string %}
    {% set TEMP = params.TEMP|default(0)|int %}
    {% set WAIT = params.WAIT|default(0)|int %}

    {% if HEATER == "extruder" %}
      {% if WAIT == 1 %}
    M109 S{TEMP}
      {% else %}
    M104 S{TEMP}
      {% endif %}
    {% else %}
     {% if WAIT == 1 %}
    M190 S{TEMP}
      {% else %}
    M140 S{TEMP}
      {% endif %}
    {% endif %}

[gcode_macro ENDING_RETRACTION]
gcode:    
     {% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}
     G1 E{RETRACT*-1} F1800 

[gcode_macro Z_HOP_5]
gcode:
  # Parameters
	{% set z = params.Z|default(5)|int %}

  # Check that zhop doesn't exceed z max
  {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}; 
    RELATIVE_COORDINATES
	G1 Z{z} F900; raise Z up by z hop amount
    ABSOLUTE_COORDINATES
  {% else %}
	{ action_respond_info("Z Hop exceeds maximum Z height.") }; if z max is exceeded, show message and set zhop value for resume to 0
  {% endif %}




