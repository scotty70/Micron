# Moved from Bed_Fans.cfg
##############################################################################################################
#                              Heater Overrides w/ Bed Fans logic 
##############################################################################################################


# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
	#Parameters
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}


# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}

# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
	
	{% if S >= THRESHOLD %}
		BedFansSlow																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		BedFansOff																# < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}		# Wait for bed temp

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BedFansFast																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}


# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold|int %}
	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			BedFansSlow
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
		{% else %}
			BedFansOff
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}


# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BedFansOff
	_TURN_OFF_HEATERS

[gcode_macro TEMPERATURE_WAIT]
rename_existing: _TEMPERATURE_WAIT
gcode:
    {% set SENSOR = params.SENSOR|default("")|string %}
    {% set MINIMUM = params.MINIMUM|int %}
    {% set MSG = SENSOR + "temperature has reached " + MINIMUM |string %}
    DISPLAYTEXT TEXT="Heating, Please wait.."
    _TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM} 
    DISPLAYTEXT TEXT="{MSG}"